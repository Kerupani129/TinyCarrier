//レイヤードウィンドウモジュール Ver.1.01
//Created by Akicansoft
//HP:http://d.hatena.ne.jp/As_hsp/


#module
#uselib "gdi32.dll"
#cfunc CreateDIBSection "CreateDIBSection" sptr,sptr,sptr,sptr,sptr,sptr
#cfunc GetPixel "GetPixel" sptr,sptr,sptr
#define BI_RGB	$00000000
#define DIB_RGB_COLORS	$00000000
//lbgscr用の_flagが0の場合，画像があるHSPウィンドウID _flagが1の場合，32bitビットマップオブジェクトハンドルを作成
//_hspwinid	画像があるHSPウィンドウID
//_width		画像の横の長さ
//_height		画像の縦の長さ
//_posx		画像の左上位置X
//_posy		画像の左上位置Y
//戻り値：32bitビットマップオブジェクト
#defcfunc lbgscr_CreateImage int _hspwinid, int _width, int _height, int _posx, int _posy, local bmi, local hbmp, local lpBits, local imagesize, local bmpdata, local lgsel, local cx, local cy

//DIBのサイズ
imagesize = _width*_height*4

//ビットマップオブジェクトの作成
dim bmi, 124/4
bmi(0)=40
bmi(1)=_width
bmi(2)=_height
bmi(3)=1|(32<<16)
bmi(4)=BI_RGB
bmi(5)=imagesize
hbmp = CreateDIBSection(0, varptr(bmi), DIB_RGB_COLORS, varptr(lpBits), 0, 0)
dupptr bmpdata, lpBits, imagesize, 4

//ビットマップに描画
lgsel = ginfo_sel
gsel _hspwinid
cx = 0
cy = _height-1
repeat  imagesize/4

		l2 = GetPixel(hdc, _posx+cx, _posy+cy)				//色データ
		l3 = GetPixel(hdc, _posx+_width+cx, _posy+cy)		//アルファブレンドデータ(赤しか見てないけど)
				
		//画像から色取得
		if cx == _width-1{
			cx = 0
			cy--
		} else {
			cx++
		}

		//アルファブレンドDIBへ書き込み
		lpoke bmpdata, cnt*4, (peek(l2, 0) << 16) | (peek(l2, 1) << 8) | (peek(l2, 2)<< 0) | (peek(l3, 0) << 24)		//RGBAの順
loop
gsel lgsel		//元に戻す
return hbmp
#global



#module
#uselib "gdi32.dll"
#func DeleteObject "DeleteObject" sptr
//ビットマップオブジェクトを削除
#deffunc lbgscr_DeleteImage int _hbmp
DeleteObject _hbmp
return
#global


#module
#define GWL_EXSTYLE	$FFFFFFEC
#define WS_EX_LAYERED	$00080000
#define AC_SRC_OVER	$00000000
#define AC_SRC_ALPHA	$00000001
#define ULW_ALPHA	$00000002
#define SRCCOPY	$00CC0020
#define x 0
#define y 1

#uselib "user32.dll"
#func GetWindowLong "GetWindowLongA" sptr,sptr
#func SetWindowLong "SetWindowLongA" sptr,sptr,sptr
#func UpdateLayeredWindow "UpdateLayeredWindow" sptr,sptr,sptr,sptr,sptr,sptr,sptr,sptr,sptr
#cfunc GetDC "GetDC" sptr
#func ReleaseDC "ReleaseDC" sptr,sptr

#uselib "gdi32.dll"
#cfunc CreateCompatibleDC "CreateCompatibleDC" sptr
#func DeleteDC "DeleteDC" sptr
#func SelectObject "SelectObject" sptr,sptr

//レイヤードウィンドウの更新
//_hspwinid		レイヤードウィンドウにするためのHSPウィンドウID
//_width		ウィンドウの横の長さ
//_height		ウィンドウの縦の長さ
//_inum			_flagが0の場合，画像があるHSPウィンドウID _flagが1の場合，32bitビットマップオブジェクトハンドル
//_iposx		画像の左上位置X
//_iposy		画像の左上位置Y
//_flag			_inumの動作を変更するためのフラグ
#define global lbgscr_Update(%1, %2, %3, %4, %5, %6, %7=0)	lbgscr %1, %2, %3, -1, 0, 0, %4, %5, %6, %7

//レイヤードウィンドウの作成
//_hspwinid		レイヤードウィンドウにするためのHSPウィンドウID
//_width		ウィンドウの横の長さ
//_height		ウィンドウの縦の長さ
//_type			ウィンドウタイプ (ウィンドウタイプが -1 の場合ウィンドウを更新するだけになる。_posx,_posyは無効)
//_posx			ウィンドウの左上からの表示位置X
//_posy			ウィンドウの左上からの表示位置Y
//_inum			_flagが0の場合，画像があるHSPウィンドウID _flagが1の場合，32bitビットマップオブジェクトハンドル
//_iposx		画像の左上位置X
//_iposy		画像の左上位置Y
//_flag			_inumの動作を変更するためのフラグ
#deffunc lbgscr int _hspwinid, int _width, int _height, int _type, int _posx, int _posy, int _inum, int _iposx, int _iposy, int _flag, local hbmp, local hdc_, local size, local pptSrc, local pblend, local hMemDC

//0以上指定
if _type > -1 {
	//ウィンドウを作成
	bgscr  _hspwinid, _width, _height, 6, _posx, _posy
} else {
	gsel _hspwinid
}
//レイヤードウィンドウにする
GetWindowLong hwnd, GWL_EXSTYLE
SetWindowLong hwnd, GWL_EXSTYLE, stat|WS_EX_LAYERED

//ビットマップオブジェクトを作成するか既存のビットマップオブジェクトを使用するかどうかのフラグ
if _flag == 0 {
	hbmp = lbgscr_CreateImage(_inum, _width, _height, _iposx, _iposy)
} else {
	hbmp = _inum		//既存の32bitビットマップオブジェクトを指定
}
	//DCにBMPを適用
	GetDC hWnd
	hdc_    = stat
	hMemDC  = CreateCompatibleDC(hdc_)
	SelectObject hMemDC, hbmp		//ウィンドウに適用

//ウィンドウサイズ
size(x) = _width
size(y) = _height

//デバイスコンテキストにおけるレイヤの位置
pptSrc(x) = 0
pptSrc(y) = 0

//レイヤードウィンドウを構成するときに使う透明度の値
sdim pblend,4
poke pblend,0,AC_SRC_OVER
poke pblend,1,0
poke pblend,2,255
poke pblend,3,AC_SRC_ALPHA

//レイヤードウィンドウにする
UpdateLayeredWindow hwnd, hdc, 0, varptr(size), hMemDC, varptr(pptSrc), 0, varptr(pblend), ULW_ALPHA

//削除
ReleaseDC hWnd,hdc_
if _flag == 0 : lbgscr_DeleteImage hbmp //既存ビットマップオブジェクトを使用していた場合削除しない
DeleteDC hMemDC

//アクティブ判定
if (_type!=2)&(_type!=3)&(_type!=6)&(_type!=10)&(_type!=18)&(_type!=-1){
	gsel _hspwinid, 1
}
return 0
#global
