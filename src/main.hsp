#include "user32.as"

#include "mod_lbgscr.hsp"

// コンパイル設定
#packopt hide 1

// 定数
/* ウィンドウメッセージ */
#define WM_DESTROY           0x0002
#define WM_WINDOWPOSCHANGING 0x0046
#define WM_WINDOWPOSCHANGED  0x0047
#define WM_NCLBUTTONDOWN     0x00A1
#define WM_LBUTTONDOWN       0x0201

/* その他 */
#define HWND_BOTTOM 0x0001

#define SWP_NOSIZE     0x0001
#define SWP_NOMOVE     0x0002
#define SWP_NOZORDER   0x0004
#define SWP_NOREDRAW   0x0008
#define SWP_NOACTIVATE 0x0010

#define MK_LBUTTON 0x0001

#define HTCAPTION 2

// 変数
dim hWndList, 2
dim hBmpList, 1

// 
// メイン
// 
	
	// 画像準備
	buffer 2, 800, 1600
	
	pos 0, 0
	picload "res/chima02b.bmp", 1
	pos 400, 0
	picload "res/chima02b.bmp", 1
	pos 0, 800
	picload "res/chima02f.bmp", 1
	pos 400, 800
	picload "res/chima02f.bmp", 1
	
	repeat 2
		
		id = cnt
		
		repeat 400
			x = cnt
			repeat 800
				y = cnt
				pget x + 400, y + 800 * id
				if (ginfo_r != 0x00 || ginfo_g != 0x00 || ginfo_b != 0x00) {
					color 0xFF, 0xFF, 0xFF
					pset x + 400, y + 800 * id
				}
			loop
		loop
		
		hBmpList(cnt) = lbgscr_CreateImage(2, 400, 800, 0, 800 * id)
		
	loop
	
	// ウィンドウ生成
	/* 後ろのウィンドウ */
	lbgscr 0, 160, 320, , -1, -1
	hWndList.0 = hWnd
	
	oncmd gosub *OnWindowPosChanging, WM_WINDOWPOSCHANGING
	oncmd gosub *OnWindowPosChanged , WM_WINDOWPOSCHANGED
	oncmd gosub *OnLButtonDown      , WM_LBUTTONDOWN
	oncmd gosub *OnDestroy          , WM_DESTROY
	
	SetWindowPos hWndList.0, HWND_BOTTOM, 0, 0, 0, 0, (SWP_NOMOVE | SWP_NOSIZE)
	
	lbgscr_Update 0, 400, 800, hBmpList(0), -1, -1, 1
	
	/* 手前のウィンドウ */
	lbgscr 1, 160, 320, , ginfo_wx1, ginfo_wy1
	hWndList.1 = hWnd
	
	oncmd gosub *OnLButtonDown      , WM_LBUTTONDOWN
	oncmd gosub *OnDestroy          , WM_DESTROY
	
	gsel 1, 2
	
	lbgscr_Update 1, 400, 800, hBmpList(1), -1, -1, 1
	
	stop

// 
// ウィンドウサイズ・位置・Z オーダーが変更している時
// 
*OnWindowPosChanging
	
	dupptr windowPos, lParam, 28, 4
	
	windowPos.1 = HWND_BOTTOM // windowPos.hwndInsertAfter = HWND_BOTTOM
	
	return

// 
// ウィンドウサイズ・位置・Z オーダーが変更された時
// 
*OnWindowPosChanged
	
	gsel 0
	SetWindowPos hWndList.1, HWND_BOTTOM, ginfo_wx1, ginfo_wy1, 0, 0, (SWP_NOSIZE | SWP_NOZORDER | SWP_NOREDRAW | SWP_NOACTIVATE)
	
	return

// 
// クライアント領域でマウス左ボタン押し下げ時
// 
*OnLButtonDown
	
	fwKeys =  wParam                  // キーフラグ
	xPos   =  lParam & 0xFFFF         // カーソル X 座標
	yPos   = (lParam >> 16) & 0xFFFF  // カーソル Y 座標
	
	if (fwKeys == MK_LBUTTON) {
		sendmsg hWndList(0), WM_NCLBUTTONDOWN, HTCAPTION, 0
	}
	
	return

// 
// 終了処理
// 
*OnDestroy
	
	foreach hBmpList
	
		if (hBmpList(cnt) != 0) {
			lbgscr_DeleteImage hBmpList(cnt)
			hBmpList(cnt) = 0
		}
		
	loop
	
	return
