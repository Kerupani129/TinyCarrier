#include "user32.as"

// コンパイル設定
#packopt hide 1

// 定数
/* ウィンドウメッセージ */
#define WM_DESTROY           0x0002
#define WM_WINDOWPOSCHANGING 0x0046
#define WM_WINDOWPOSCHANGED  0x0047
#define WM_NCLBUTTONDOWN     0x00A1
#define WM_LBUTTONDOWN       0x0201

/* その他 */
#define HWND_BOTTOM 0x0001

#define SWP_NOSIZE     0x0001
#define SWP_NOMOVE     0x0002
#define SWP_NOZORDER   0x0004
#define SWP_NOREDRAW   0x0008
#define SWP_NOACTIVATE 0x0010

#define MK_LBUTTON 0x0001

#define HTCAPTION 2

// 変数
dim hWndList, 2

// 
// メイン
// 
	
	// ウィンドウ生成
	/* 後ろのウィンドウ */
	screen 0, 240, 160, , -1, -1
	hWndList.0 = hWnd
	
	oncmd gosub *OnWindowPosChanging, WM_WINDOWPOSCHANGING
	oncmd gosub *OnWindowPosChanged , WM_WINDOWPOSCHANGED
	oncmd gosub *OnLButtonDown      , WM_LBUTTONDOWN
	oncmd gosub *OnDestroy          , WM_DESTROY
	
	SetWindowPos hWndList.0, HWND_BOTTOM, 0, 0, 0, 0, (SWP_NOMOVE | SWP_NOSIZE)
	
	winPos = 0, 0
	ClientToScreen hWndList.0, varptr(winPos)
	
	color 0x00, 0xFF, 0xFF
	boxf
	
	/* 手前のウィンドウ */
	bgscr 1, 120, 90, , winPos.0 + 60, winPos.1 + 30
	hWndList.1 = hWnd
	
	oncmd gosub *OnLButtonDown      , WM_LBUTTONDOWN
	oncmd gosub *OnDestroy          , WM_DESTROY
	
	gsel 1, 2
	
	color 0x00, 0x00, 0xFF
	boxf
	color 0x00, 0x80, 0xFF
	boxf 0, 0, 120, 10
	
	stop

// 
// ウィンドウサイズ・位置・Z オーダーが変更している時
// 
*OnWindowPosChanging
	
	dupptr windowPos, lParam, 28, 4
	
	windowPos.1 = HWND_BOTTOM // windowPos.hwndInsertAfter = HWND_BOTTOM
	
	return

// 
// ウィンドウサイズ・位置・Z オーダーが変更された時
// 
*OnWindowPosChanged
	
	gsel 0
	
	winPos = 0, 0
	ClientToScreen hWndList.0, varptr(winPos)
	
	SetWindowPos hWndList.1, HWND_BOTTOM, winPos.0 + 60, winPos.1 + 30, 0, 0, (SWP_NOSIZE | SWP_NOZORDER | SWP_NOREDRAW | SWP_NOACTIVATE)
	
	return

// 
// クライアント領域でマウス左ボタン押し下げ時
// 
*OnLButtonDown
	
	fwKeys =  wParam                  // キーフラグ
	xPos   =  lParam & 0xFFFF         // カーソル X 座標
	yPos   = (lParam >> 16) & 0xFFFF  // カーソル Y 座標
	
	if (fwKeys == MK_LBUTTON) {
		sendmsg hWndList(0), WM_NCLBUTTONDOWN, HTCAPTION, 0
	}
	
	return

// 
// 終了処理
// 
*OnDestroy
	
	return
